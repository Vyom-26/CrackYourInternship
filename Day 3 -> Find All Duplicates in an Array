Question Link :   https://leetcode.com/problems/find-all-duplicates-in-an-array/description/



Code : 


//This code has time complexity : O(nlogn) and space complexity : O(n)

// #pragma GCC optimize("03", "unroll-loops")
// class Solution {
// public:
//     vector<int> findDuplicates(vector<int>& nums) {
//         vector<int>ans;
//         sort(nums.begin(), nums.end());
//         for(int i=0;i<nums.size()-1;i++){
//             int XOR = nums[i]^nums[i+1];
//             if(XOR==0){
//                 ans.push_back(nums[i]);
//             }
//         }
//         return ans;
//     }
// };
// auto init = [](){
//     ios::sync_with_stdio(false);
//     cin.tie(nullptr);
//     cout.tie(nullptr);
//     return 'c';
// }();


//This solution has time complexity : O(n) and space complexity : O(n)

#pragma GCC optimize("03", "unroll-loops")
class Solution {
public:
    vector<int> findDuplicates(vector<int>& nums) {
        vector<int>ans;
        for(int i=0;i<nums.size();i++){
            int index = abs(nums[i])-1;
            nums[index] = -1*nums[index];
            if(nums[index]>0){
                ans.push_back(index+1);
            }
        }
        return ans;
    }
};
auto init = [](){
    ios::sync_with_stdio(false);
    cin.tie(nullptr);
    cout.tie(nullptr);
    return 'c';
}();

